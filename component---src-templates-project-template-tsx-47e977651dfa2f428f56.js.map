{"version":3,"file":"component---src-templates-project-template-tsx-47e977651dfa2f428f56.js","mappings":"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","sources":["webpack://dev-log/./src/util/getProjectDate.ts","webpack://dev-log/./src/components/Project/ProjectHead.tsx","webpack://dev-log/./src/util/getDateRange.ts","webpack://dev-log/./src/templates/project_template.tsx"],"sourcesContent":["export default function getProjectDate(date: string): string {\r\n\tconst [year, month, _] = date.split(\".\");\r\n\treturn `${year}.${month}`;\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport { FunctionComponent } from \"react\";\r\nimport { ProjectFrontmatterType } from \"types/ProjectItem.types\";\r\nimport getDateRange from \"../../util/getDateRange\";\r\nimport getProjectDate from \"../../util/getProjectDate\";\r\n\r\ntype ProjectHeadProps = Pick<\r\n\tProjectFrontmatterType,\r\n\t\"title\" | \"summary\" | \"start\" | \"end\" | \"type\" | \"links\"\r\n>;\r\n\r\nconst HeadWrapper = styled.div`\r\n\twidth: 100%;\r\n\tmargin: 2.5rem 0;\r\n`;\r\n\r\nconst HeadInfoWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tmargin: 0 auto;\r\n\tpadding: 1.125rem 0;\r\n\tcolor: rgb(var(--accent));\r\n\r\n\t@media (max-width: 1200px) {\r\n\t\twidth: var(--sm-container);\r\n\t\tpadding: 2.5rem 1.125rem;\r\n\t}\r\n\r\n\t@media (max-width: 1080px) {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nconst Small = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: flex-start;\r\n\tgap: 1em;\r\n\tmargin-bottom: 1em;\r\n\tfont-size: 0.875rem;\r\n\tletter-spacing: 0.1em;\r\n\ttext-transform: capitalize;\r\n`;\r\n\r\nconst Duration = styled.div`\r\n\tcolor: rgba(var(--text-color), 75%);\r\n`;\r\n\r\nconst Dimmed = styled.span`\r\n\tcolor: rgba(var(--text-color), 50%);\r\n`;\r\n\r\nconst Title = styled.div`\r\n\toverflow-wrap: break-word;\r\n\tmargin-bottom: 0.5em;\r\n\tfont-size: 2.8125rem;\r\n\tfont-weight: 700;\r\n\tword-break: keep-all;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tfont-size: 1.875rem;\r\n\t}\r\n`;\r\n\r\nconst Summary = styled.div`\r\n\toverflow-wrap: break-word;\r\n\tmargin-bottom: 0.5em;\r\n\tfont-size: 1.25rem;\r\n\tfont-weight: 400;\r\n\tline-height: 1.25em;\r\n\tword-break: keep-all;\r\n\tcolor: rgba(var(--text-color), 85%);\r\n`;\r\n\r\nconst LinksWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tgap: 1rem;\r\n\tpadding: 2rem;\r\n\tborder-radius: 0 1rem 0 1rem;\r\n\tborder: 1px solid rgba(var(--text-color), 10%);\r\n\tbackground: rgba(var(--accent), 0.02);\r\n\ttransition: background 200ms;\r\n\r\n\t@media (max-width: 1200px) {\r\n\t\tmargin: 2.5rem 1.125rem 0;\r\n\t}\r\n\r\n\t@media (hover: hover) {\r\n\t\t&:hover {\r\n\t\t\tbackground: rgba(var(--accent), 0);\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst ProjectItemLink = styled.a`\r\n\tposition: relative;\r\n\r\n\t&::after {\r\n\t\tcontent: \"\";\r\n\t\twidth: 0%;\r\n\t\theight: 1em;\r\n\t\tposition: absolute;\r\n\t\tleft: 0;\r\n\t\ttop: 0.25em;\r\n\t\tbackground-color: rgba(var(--tag-color), 0.2);\r\n\t\ttransition: width 200ms ease-in-out;\r\n\t}\r\n\r\n\t&:hover::after {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nconst ProjectHead: FunctionComponent<ProjectHeadProps> = function ({\r\n\ttitle,\r\n\tsummary,\r\n\tstart,\r\n\tend,\r\n\ttype,\r\n\tlinks,\r\n}) {\r\n\tconst startDate = getProjectDate(start);\r\n\tconst endDate = getProjectDate(end);\r\n\tconst duration = getDateRange({ start, end });\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<HeadWrapper>\r\n\t\t\t\t<HeadInfoWrapper>\r\n\t\t\t\t\t<Small>\r\n\t\t\t\t\t\t<Duration>\r\n\t\t\t\t\t\t\t{startDate} - {endDate}\r\n\t\t\t\t\t\t</Duration>\r\n\t\t\t\t\t\t<Dimmed>(총 {duration})</Dimmed>·<Dimmed>{type} project</Dimmed>\r\n\t\t\t\t\t</Small>\r\n\t\t\t\t\t<Title>{title}</Title>\r\n\t\t\t\t\t<Summary>{summary}</Summary>\r\n\t\t\t\t</HeadInfoWrapper>\r\n\t\t\t</HeadWrapper>\r\n\t\t\t<LinksWrapper>\r\n\t\t\t\t<Dimmed>Links</Dimmed>\r\n\t\t\t\t{links.map(link => (\r\n\t\t\t\t\t<ProjectItemLink\r\n\t\t\t\t\t\tkey={link.href}\r\n\t\t\t\t\t\trel=\"noopener\"\r\n\t\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\t\thref={link.href}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<span>{link.name} ↗</span>\r\n\t\t\t\t\t</ProjectItemLink>\r\n\t\t\t\t))}\r\n\t\t\t</LinksWrapper>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ProjectHead;\r\n","export default function getDateRange({\r\n\tstart,\r\n\tend,\r\n}: {\r\n\tstart: string;\r\n\tend: string;\r\n}): string {\r\n\tconst startTime = Date.parse(start);\r\n\tconst endTime = Date.parse(end);\r\n\t// second: n/1000, minute: n/1000/60, hour: n/1000/60/60, day: n/1000/60/60/24 ...\r\n\tconst diff = (endTime - startTime) / 1000;\r\n\tconst times: Array<{\r\n\t\tunit: \"년\" | \"개월\" | \"주\";\r\n\t\tmilliSeconds: number;\r\n\t}> = [\r\n\t\t{ unit: \"주\", milliSeconds: 60 * 60 * 24 * 7 },\r\n\t\t{ unit: \"개월\", milliSeconds: 60 * 60 * 24 * 30 },\r\n\t\t{ unit: \"년\", milliSeconds: 60 * 60 * 24 * 365 },\r\n\t];\r\n\tlet result: { unit: string; value: number } = { unit: \"\", value: 0 };\r\n\r\n\t// 년 단위부터 알맞는 단위 찾기\r\n\tfor (const value of times) {\r\n\t\tconst betweenTime = diff / value.milliSeconds;\r\n\r\n\t\t// 큰 단위는 0보다 작은 소수 단위 나옴\r\n\t\tif (betweenTime < 10) {\r\n\t\t\tresult = { unit: value.unit, value: betweenTime };\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tif (result.unit === \"주\") {\r\n\t\treturn Math.round(result.value).toString() + result.unit;\r\n\t}\r\n\r\n\tif (result.unit == \"년\") {\r\n\t\tconst restMonth = result.value - Math.floor(result.value);\r\n\t\tconst month: string = `${Math.round(restMonth * 10)}개월`;\r\n\t\tconst year: string = `${Math.floor(result.value).toString()}${result.unit}`;\r\n\t\treturn `${year} ${month}`;\r\n\t}\r\n\r\n\treturn Math.round(result.value).toString() + result.unit;\r\n}\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport Template from \"components/Common/Template\";\r\nimport BottomNav from \"components/Common/BottomNav\";\r\nimport PostContent from \"components/Post/PostContent\";\r\nimport { ProjectPageItemType } from \"types/ProjectItem.types\";\r\nimport styled from \"@emotion/styled\";\r\nimport ProjectHead from \"components/Project/ProjectHead\";\r\n\r\ntype ProjectTemplateProps = {\r\n\tdata: {\r\n\t\tallMarkdownRemark: {\r\n\t\t\tedges: ProjectPageItemType[];\r\n\t\t};\r\n\t};\r\n\tlocation: {\r\n\t\thref: string;\r\n\t};\r\n};\r\n\r\nconst ContentWrapper = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tmargin-bottom: 80px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tgap: 5rem;\r\n\twidth: var(--sm-container);\r\n\tmargin: 0;\r\n\r\n\t@media (max-width: 1080px) {\r\n\t\twidth: calc(100vw - 24px * 2);\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tgap: 1rem;\r\n\t\tmax-width: 100%;\r\n\t}\r\n`;\r\n\r\nconst ProjectTemplate: FunctionComponent<ProjectTemplateProps> = function ({\r\n\tdata: {\r\n\t\tallMarkdownRemark: { edges },\r\n\t},\r\n\tlocation: { href },\r\n}) {\r\n\tconst {\r\n\t\tnode: {\r\n\t\t\thtml,\r\n\t\t\tfrontmatter: { title, summary, start, end, type, emoji, links },\r\n\t\t},\r\n\t} = edges[0];\r\n\treturn (\r\n\t\t<Template title={title} description={summary} url={href} image={emoji}>\r\n\t\t\t<ContentWrapper>\r\n\t\t\t\t<Content>\r\n\t\t\t\t\t<ProjectHead\r\n\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\tsummary={summary}\r\n\t\t\t\t\t\tstart={start}\r\n\t\t\t\t\t\tend={end}\r\n\t\t\t\t\t\ttype={type}\r\n\t\t\t\t\t\tlinks={links}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PostContent html={html} />\r\n\t\t\t\t</Content>\r\n\t\t\t</ContentWrapper>\r\n\t\t\t<BottomNav />\r\n\t\t</Template>\r\n\t);\r\n};\r\n\r\nexport default ProjectTemplate;\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n\tquery queryMarkdownDataBySlug($slug: String) {\r\n\t\tallMarkdownRemark(\r\n\t\t\tfilter: { fields: { slug: { eq: $slug }, dir: { eq: \"project\" } } }\r\n\t\t) {\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\thtml\r\n\t\t\t\t\tfrontmatter {\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\tsummary\r\n\t\t\t\t\t\tstart(formatString: \"YYYY.MM.DD\")\r\n\t\t\t\t\t\tend(formatString: \"YYYY.MM.DD\")\r\n\t\t\t\t\t\ttype\r\n\t\t\t\t\t\tskills\r\n\t\t\t\t\t\temoji\r\n\t\t\t\t\t\tlinks {\r\n\t\t\t\t\t\t\tname\r\n\t\t\t\t\t\t\thref\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n"],"names":["getProjectDate","date","year","month","_","split","HeadWrapper","HeadInfoWrapper","Small","Duration","Dimmed","Title","Summary","LinksWrapper","ProjectItemLink","title","summary","start","end","type","links","startDate","endDate","duration","startTime","Date","parse","diff","times","unit","milliSeconds","result","value","betweenTime","Math","round","toString","restMonth","floor","getDateRange","___EmotionJSX","map","link","key","href","rel","target","name","ContentWrapper","styles","Content","data","allMarkdownRemark","edges","location","node","html","frontmatter","emoji","Template","description","url","image","ProjectHead","PostContent","BottomNav"],"sourceRoot":""}