{"version":3,"file":"component---src-templates-post-template-tsx-3f738b9f97018d402fd3.js","mappings":"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","sources":["webpack://dev-log/./src/components/Post/PostHeadInfo.tsx","webpack://dev-log/./src/components/Post/PostHead.tsx","webpack://dev-log/./src/components/Post/PostTOC.tsx","webpack://dev-log/./src/components/Post/CommentWidget.tsx","webpack://dev-log/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\nexport type PostHeadInfoProps = {\r\n\ttitle: string;\r\n\tdate: string;\r\n\tcategory: string;\r\n\ttags: string[];\r\n\temoji: string;\r\n};\r\n\r\nconst PostHeadInfoWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tmargin: 0 auto;\r\n\tpadding: 20px 0;\r\n\tcolor: rgb(var(--accent));\r\n\r\n\t@media (max-width: 1200px) {\r\n\t\twidth: var(--sm-container);\r\n\t\tpadding: 40px 20px;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\twidth: 100%;\r\n\t}\r\n`;\r\n\r\nconst Date = styled.div`\r\n\tmargin-bottom: 1rem;\r\n\tfont-size: 14px;\r\n`;\r\n\r\nconst Title = styled.div`\r\n\t// display: -webkit-box;\r\n\t// overflow: hidden;\r\n\toverflow-wrap: break-word;\r\n\t// text-overflow: ellipsis;\r\n\t// white-space: normal;\r\n\t// -webkit-line-clamp: 2;\r\n\t// -webkit-box-orient: vertical;\r\n\tmargin-bottom: 1rem;\r\n\tfont-size: 45px;\r\n\tfont-weight: 900;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tfont-size: 30px;\r\n\t}\r\n`;\r\n\r\nconst PostData = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: flex-start;\r\n\talign-items: baseline;\r\n\tmargin-top: 10px;\r\n\tfont-size: 1.125rem;\r\n\tfont-weight: 300;\r\n\tline-height: 1.4;\r\n\r\n\t& .tags {\r\n\t\tfont-size: 0.875rem;\r\n\t\tmargin-left: 1em;\r\n\t\ttext-transform: lowercase;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tflex-direction: column;\r\n\t\talign-items: flex-start;\r\n\t\tfont-size: 16px;\r\n\t\tfont-weight: 400;\r\n\t}\r\n`;\r\n\r\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\r\n\ttitle,\r\n\tdate,\r\n\tcategory,\r\n\ttags,\r\n}) {\r\n\treturn (\r\n\t\t<PostHeadInfoWrapper>\r\n\t\t\t<Date>{date}</Date>\r\n\t\t\t<Title>{title}</Title>\r\n\t\t\t<PostData>\r\n\t\t\t\t<b className=\"category\">{category}</b>\r\n\t\t\t\t<p className=\"tags\">{tags.join(\" / \")}</p>\r\n\t\t\t</PostData>\r\n\t\t</PostHeadInfoWrapper>\r\n\t);\r\n};\r\n\r\nexport default PostHeadInfo;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport PostHeadInfo, { PostHeadInfoProps } from \"./PostHeadInfo\";\r\n\r\ntype PostHeadProps = PostHeadInfoProps & {\r\n\temoji: string;\r\n};\r\n\r\nconst PostHeadWrapper = styled.div`\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\tmargin: 40px 0 100px;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tmargin: 40px 0 20px;\r\n\t}\r\n`;\r\n\r\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\r\n\ttitle,\r\n\tdate,\r\n\tcategory,\r\n\ttags,\r\n\temoji,\r\n}) {\r\n\treturn (\r\n\t\t<PostHeadWrapper>\r\n\t\t\t<PostHeadInfo\r\n\t\t\t\ttitle={title}\r\n\t\t\t\tdate={date}\r\n\t\t\t\tcategory={category}\r\n\t\t\t\ttags={tags}\r\n\t\t\t\temoji={emoji}\r\n\t\t\t/>\r\n\t\t</PostHeadWrapper>\r\n\t);\r\n};\r\n\r\nexport default PostHead;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\ninterface PostContentProps {\r\n\thtml: string;\r\n}\r\n\r\nconst TocWrapper = styled.div``;\r\n\r\nconst TocRenderer = styled.div`\r\n\t// Renderer Style\r\n\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 260px;\r\n\tmax-height: calc(100vh - 80px);\r\n\tmargin: 60px 80px 30px 0;\r\n\tpadding: 0;\r\n\tposition: sticky;\r\n\tleft: calc(50vw - (768px / 2) - 260px);\r\n\ttop: 56px;\r\n\tword-break: keep-all;\r\n\toverflow: hidden auto;\r\n\r\n\tli {\r\n\t\tlist-style: none;\r\n\t\tdisplay: block;\r\n\t\twidth: 96%;\r\n\t\tcolor: rgb(var(--toc-color));\r\n\t\tline-height: 2;\r\n\t\tfont-size: 14px;\r\n\t\tfont-weight: 500;\r\n\r\n\t\t& > a {\r\n\t\t\tdisplay: block;\r\n\t\t\tpadding: 0.2em 0;\r\n\t\t\twhite-space: break-space;\r\n\t\t\tline-height: 1.4;\r\n\t\t\t// overflow: hidden;\r\n\t\t\t// text-overflow: ellipsis;\r\n\t\t}\r\n\r\n\t\t@media (hover: hover) {\r\n\t\t\t&:hover {\r\n\t\t\t\t// font-weight: 700;\r\n\t\t\t\tcolor: rgb(var(--accent)); // rgb(64, 107, 159);\r\n\t\t\t\tborder-width: 2px;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// h2 heading\r\n\t\t& > ul > li {\r\n\t\t\tmargin-left: 0.5em;\r\n\t\t\tpadding-left: 1em;\r\n\t\t\tborder-left: 1px solid;\r\n\r\n\t\t\t// h3 heading\r\n\t\t\t& > ul > li {\r\n\t\t\t\tmargin-left: 0.5em;\r\n\t\t\t\tpadding-left: 1em;\r\n\t\t\t\tborder-left: 1px solid;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 1280px) {\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\r\n\treturn (\r\n\t\t<TocWrapper>\r\n\t\t\t<TocRenderer dangerouslySetInnerHTML={{ __html: html }} />\r\n\t\t</TocWrapper>\r\n\t);\r\n};\r\n\r\nexport default PostContent;\r\n","import React, {\r\n\tcreateRef,\r\n\tFunctionComponent,\r\n\tuseContext,\r\n\tuseEffect,\r\n} from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { DarkModeContext } from \"hooks/DarkModeContext\";\r\n\r\nconst src = \"https://utteranc.es/client.js\";\r\nconst repo = \"callmebyneon/callmebyneon.github.io\";\r\n\r\ntype UtterancesAttributesType = {\r\n\tsrc: string;\r\n\trepo: string;\r\n\t\"issue-term\": string;\r\n\tlabel: string;\r\n\ttheme: string;\r\n\tcrossorigin: string;\r\n\tasync: string;\r\n};\r\n\r\nconst UtterancesWrapper = styled.div`\r\n\tmargin-top: 80px;\r\n\t@media (max-width: 768px) {\r\n\t\tpadding: 0 20px;\r\n\t}\r\n`;\r\n\r\nconst CommentWidget: FunctionComponent = function () {\r\n\tconst element = createRef<HTMLDivElement>();\r\n\tconst { dark } = useContext(DarkModeContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (element.current === null) return;\r\n\t\tconsole.log(element.current);\r\n\t\tconst utterances: HTMLScriptElement = document.createElement(\"script\");\r\n\r\n\t\tconst attributes: UtterancesAttributesType = {\r\n\t\t\tsrc,\r\n\t\t\trepo,\r\n\t\t\t\"issue-term\": \"pathname\",\r\n\t\t\tlabel: \"Comment\",\r\n\t\t\ttheme: dark ? \"github-dark\" : \"github-light\",\r\n\t\t\tcrossorigin: \"anonymous\",\r\n\t\t\tasync: \"true\",\r\n\t\t};\r\n\r\n\t\tObject.entries(attributes).forEach(([key, value]) => {\r\n\t\t\tutterances.setAttribute(key, value);\r\n\t\t});\r\n\r\n\t\tif (element.current.childElementCount === 1) {\r\n\t\t\tconst child = element.current.firstChild;\r\n\t\t\telement.current.removeChild(child!);\r\n\t\t}\r\n\t\telement.current.appendChild(utterances);\r\n\t}, [dark]);\r\n\r\n\treturn <UtterancesWrapper ref={element} />;\r\n};\r\n\r\nexport default CommentWidget;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport { graphql } from \"gatsby\";\r\nimport { PostPageItemType } from \"types/PostItem.types\";\r\nimport Template from \"components/Common/Template\";\r\nimport PostHead from \"../components/Post/PostHead\";\r\nimport PostTOC from \"../components/Post/PostTOC\";\r\nimport PostContent from \"../components/Post/PostContent\";\r\nimport CommentWidget from \"components/Post/CommentWidget\";\r\nimport styled from \"@emotion/styled\";\r\nimport BottomNav from \"components/Common/BottomNav\";\r\n\r\ntype PostTemplateProps = {\r\n\tdata: {\r\n\t\tallMarkdownRemark: {\r\n\t\t\tedges: PostPageItemType[];\r\n\t\t};\r\n\t};\r\n\tlocation: {\r\n\t\thref: string;\r\n\t};\r\n};\r\n\r\nconst ContentWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: center;\r\n\tmargin-bottom: 80px;\r\n`;\r\n\r\nconst Content = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: var(--sm-container);\r\n\tmargin: 0;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\twidth: calc(100vw - 20px * 2);\r\n\t\tmax-width: var(--sm-container);\r\n\t}\r\n`;\r\n\r\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\r\n\tdata: {\r\n\t\tallMarkdownRemark: { edges },\r\n\t},\r\n\tlocation: { href },\r\n}) {\r\n\tconst {\r\n\t\tnode: {\r\n\t\t\thtml,\r\n\t\t\ttableOfContents,\r\n\t\t\tfrontmatter: { title, summary, date, category, tags, emoji },\r\n\t\t},\r\n\t} = edges[0];\r\n\r\n\treturn (\r\n\t\t<Template title={title} description={summary} url={href} image={emoji}>\r\n\t\t\t<ContentWrapper>\r\n\t\t\t\t<PostTOC html={tableOfContents} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Content>\r\n\t\t\t\t\t\t<PostHead\r\n\t\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\t\tdate={date}\r\n\t\t\t\t\t\t\tcategory={category}\r\n\t\t\t\t\t\t\ttags={tags}\r\n\t\t\t\t\t\t\temoji={emoji}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<PostContent html={html} />\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t\t<CommentWidget />\r\n\t\t\t\t</div>\r\n\t\t\t</ContentWrapper>\r\n\t\t\t<BottomNav />\r\n\t\t</Template>\r\n\t);\r\n};\r\n\r\nexport default PostTemplate;\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n\tquery queryMarkdownDataBySlug($slug: String) {\r\n\t\tallMarkdownRemark(\r\n\t\t\tfilter: { fields: { slug: { eq: $slug }, dir: { eq: \"post\" } } }\r\n\t\t) {\r\n\t\t\tedges {\r\n\t\t\t\tnode {\r\n\t\t\t\t\thtml\r\n\t\t\t\t\ttableOfContents(maxDepth: 3)\r\n\t\t\t\t\tfrontmatter {\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\tsummary\r\n\t\t\t\t\t\tdate(formatString: \"YYYY.MM.DD.\")\r\n\t\t\t\t\t\tcategory\r\n\t\t\t\t\t\ttags\r\n\t\t\t\t\t\temoji\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n`;\r\n"],"names":["PostHeadInfoWrapper","Date","Title","PostData","title","date","category","tags","___EmotionJSX","className","join","PostHeadWrapper","emoji","PostHeadInfo","TocWrapper","TocRenderer","html","dangerouslySetInnerHTML","__html","UtterancesWrapper","element","createRef","dark","useContext","DarkModeContext","useEffect","current","console","log","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","_ref","key","value","setAttribute","childElementCount","child","firstChild","removeChild","appendChild","ref","ContentWrapper","target","name","styles","Content","data","allMarkdownRemark","edges","location","href","node","tableOfContents","frontmatter","summary","Template","description","url","image","PostTOC","PostHead","PostContent","CommentWidget","BottomNav"],"sourceRoot":""}