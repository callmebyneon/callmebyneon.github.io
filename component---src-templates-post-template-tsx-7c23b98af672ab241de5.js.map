{"version":3,"file":"component---src-templates-post-template-tsx-7c23b98af672ab241de5.js","mappings":"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","sources":["webpack://dev-log/./src/components/Post/PostHeadInfo.tsx","webpack://dev-log/./src/components/Post/PostHead.tsx","webpack://dev-log/./src/components/Post/PostTOC.tsx","webpack://dev-log/./src/components/Post/PostContent.tsx","webpack://dev-log/./src/components/Post/CommentWidget.tsx","webpack://dev-log/./src/templates/post_template.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nexport type PostHeadInfoProps = {\r\n  title: string\r\n  date: string\r\n  category: string\r\n  tags: string[]\r\n  emoji: string\r\n}\r\n\r\nconst PostHeadInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  padding: 20px 0;\r\n  color: rgb(var(--accent));\r\n\r\n  @media (max-width: 1200px) {\r\n    width: 768px;\r\n    padding: 40px 20px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst Date = styled.div`\r\n  margin-bottom: 1rem;\r\n  font-size: 14px;\r\n`\r\n\r\nconst Title = styled.div`\r\n  // display: -webkit-box;\r\n  // overflow: hidden;\r\n  overflow-wrap: break-word;\r\n  // text-overflow: ellipsis;\r\n  // white-space: normal;\r\n  // -webkit-line-clamp: 2;\r\n  // -webkit-box-orient: vertical;\r\n  margin-bottom: 1rem;\r\n  font-size: 45px;\r\n  font-weight: 900;\r\n\r\n  @media (max-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`\r\n\r\nconst PostData = styled.div`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: baseline;\r\n  margin-top: 10px;\r\n  font-size: 1.125rem;\r\n  font-weight: 300;\r\n  line-height: 1.4;\r\n\r\n  & .tags {\r\n    font-size: 0.875rem;\r\n    margin-left: 1em;\r\n    text-transform: lowercase;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    font-size: 16px;\r\n    font-weight: 400;\r\n  }\r\n`\r\n\r\nconst PostHeadInfo: FunctionComponent<PostHeadInfoProps> = function ({\r\n  title,\r\n  date,\r\n  category,\r\n  tags,\r\n  emoji,\r\n}) {\r\n  return (\r\n    <PostHeadInfoWrapper>\r\n      <Date>{date}</Date>\r\n      <Title>{title}</Title>\r\n      <PostData>\r\n        <b className=\"category\">{category}</b>\r\n        <p className=\"tags\">{tags.join(' / ')}</p>\r\n      </PostData>\r\n    </PostHeadInfoWrapper>\r\n  )\r\n}\r\n\r\nexport default PostHeadInfo\r\n","import React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport PostHeadInfo, { PostHeadInfoProps } from './PostHeadInfo'\r\n\r\ntype PostHeadProps = PostHeadInfoProps & {\r\n  emoji: string\r\n}\r\n\r\nconst PostHeadWrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  margin: 40px 0 100px;\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 40px 0 20px;\r\n  }\r\n`\r\n\r\nconst PostHead: FunctionComponent<PostHeadProps> = function ({\r\n  title,\r\n  date,\r\n  category,\r\n  tags,\r\n  emoji,\r\n}) {\r\n  return (\r\n    <PostHeadWrapper>\r\n      <PostHeadInfo\r\n        title={title}\r\n        date={date}\r\n        category={category}\r\n        tags={tags}\r\n        emoji={emoji}\r\n      />\r\n    </PostHeadWrapper>\r\n  )\r\n}\r\n\r\nexport default PostHead\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\n\r\ninterface PostContentProps {\r\n\thtml: string;\r\n}\r\n\r\nconst TocWrapper = styled.div``;\r\n\r\nconst TocRenderer = styled.div`\r\n\t// Renderer Style\r\n\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 260px;\r\n\tmax-height: calc(100vh - 80px);\r\n\tmargin: 60px 80px 30px 0;\r\n\tpadding: 0;\r\n\tposition: sticky;\r\n\tleft: calc(50vw - (768px / 2) - 260px);\r\n\ttop: 56px;\r\n\tword-break: keep-all;\r\n\toverflow: hidden auto;\r\n\r\n\tli {\r\n\t\tlist-style: none;\r\n\t\tdisplay: block;\r\n\t\twidth: 96%;\r\n\t\tcolor: rgb(var(--toc-color));\r\n\t\tline-height: 2;\r\n\t\tfont-size: 14px;\r\n\t\tfont-weight: 500;\r\n\r\n\t\t& > a {\r\n\t\t\tdisplay: block;\r\n\t\t\tpadding: 0.2em 0;\r\n\t\t\twhite-space: break-space;\r\n\t\t\tline-height: 1.4;\r\n\t\t\t// overflow: hidden;\r\n\t\t\t// text-overflow: ellipsis;\r\n\t\t}\r\n\r\n\t\t@media (hover: hover) {\r\n\t\t\t&:hover {\r\n\t\t\t\t// font-weight: 700;\r\n\t\t\t\tcolor: rgb(var(--accent)); // rgb(64, 107, 159);\r\n\t\t\t\tborder-width: 2px;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// h2 heading\r\n\t\t& > ul > li {\r\n\t\t\tmargin-left: 0.5em;\r\n\t\t\tpadding-left: 1em;\r\n\t\t\tborder-left: 1px solid;\r\n\r\n\t\t\t// h3 heading\r\n\t\t\t& > ul > li {\r\n\t\t\t\tmargin-left: 0.5em;\r\n\t\t\t\tpadding-left: 1em;\r\n\t\t\t\tborder-left: 1px solid;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t@media (max-width: 1300px) {\r\n\t\tdisplay: none;\r\n\t}\r\n`;\r\n\r\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\r\n\treturn (\r\n\t\t<TocWrapper>\r\n\t\t\t<TocRenderer dangerouslySetInnerHTML={{ __html: html }} />\r\n\t\t</TocWrapper>\r\n\t);\r\n};\r\n\r\nexport default PostContent;\r\n","import React, { FunctionComponent } from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport \"gatsby-remark-vscode/styles.css\";\r\n\r\ninterface PostContentProps {\r\n\thtml: string;\r\n}\r\n\r\nconst MarkdownWrapper = styled.div`\r\n\twidth: 100%;\r\n\tmargin: 0;\r\n`;\r\n\r\nconst MarkdownRenderer = styled.div`\r\n\t// Renderer Style\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\twidth: 100%;\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tword-break: keep-all;\r\n\twhite-space: break-space;\r\n\r\n\t// Markdown Style\r\n\tline-height: 1.8;\r\n\tfont-size: 1rem;\r\n\tfont-weight: 400;\r\n\r\n\t// Apply Padding Attribute to All Elements\r\n\tp {\r\n\t\tpadding: 0.8em 0;\r\n\t}\r\n\r\n\t// Adjust Heading Element Style\r\n\th1,\r\n\th2,\r\n\th3 {\r\n\t\tfont-weight: 700;\r\n\t\tmargin-bottom: 1em;\r\n\t}\r\n\r\n\t* + h1,\r\n\t* + h2,\r\n\t* + h3 {\r\n\t\tpadding-top: 2.5em;\r\n\t}\r\n\r\n\thr + h1,\r\n\thr + h2,\r\n\thr + h3 {\r\n\t\tpadding-top: 0;\r\n\t}\r\n\r\n\th1 + :is(ol, ul),\r\n\th2 + :is(ol, ul),\r\n\th3 + :is(ol, ul) {\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\th1 {\r\n\t\tfont-size: 1.875rem;\r\n\t}\r\n\r\n\th2 {\r\n\t\tfont-size: 1.5rem;\r\n\t}\r\n\r\n\th3 {\r\n\t\tfont-size: 1.25rem;\r\n\t}\r\n\r\n\t// Adjust Quotation Element Style\r\n\tblockquote {\r\n\t\tmargin: 30px 0;\r\n\t\tpadding: 5px 15px;\r\n\t\tbackground: rgba(var(--accent), 0.03);\r\n\t\tborder-left: 2px solid rgba(var(--accent));\r\n\t\tfont-weight: 700;\r\n\t}\r\n\r\n\t// Adjust List Element Style\r\n\tol,\r\n\tul {\r\n\t\tmargin-left: 20px;\r\n\t\tpadding: 20px 0;\r\n\t}\r\n\r\n\tli {\r\n\t\twidth: 100%;\r\n\r\n\t\t& > ul,\r\n\t\t& > p + * {\r\n\t\t\tpadding: 8px 0;\r\n\t\t}\r\n\r\n\t\t& > pre[data-language] {\r\n\t\t\tmargin: 8px 0;\r\n\t\t}\r\n\t}\r\n\r\n\t// Adjust Horizontal Rule style\r\n\thr {\r\n\t\tborder: 1px solid rgba(var(--accent));\r\n\t\tmargin: 100px 0;\r\n\t}\r\n\r\n\t// Adjust Link Element Style\r\n\ta {\r\n\t\tdisplay: inline;\r\n\t\twidth: 100%;\r\n\t\tcolor: rgb(var(--anchor-color));\r\n\t\ttext-decoration: underline;\r\n\t\toverflow-wrap: anywhere;\r\n\t\tword-break: break-word;\r\n\r\n\t\t&.anchor.after {\r\n\t\t\tdisplay: inline;\r\n\t\t}\r\n\t}\r\n\r\n\t// Adjust Code Style\r\n\tpre[data-language] {\r\n\t\tmargin: 30px 0;\r\n\t\t// padding: 15px 20px;\r\n\t\tborder-radius: 12px;\r\n\t\toverflow: auto;\r\n\r\n\t\t::-webkit-scrollbar-thumb {\r\n\t\t\tbackground: rgba(var(--extreme), 0.5);\r\n\t\t\tborder-radius: 3px;\r\n\t\t}\r\n\r\n\t\t.line-numbers-rows {\r\n\t\t\tpadding: 1em 0;\r\n\t\t\tpadding-left: 8px;\r\n\t\t}\r\n\t}\r\n\r\n\t& :not(pre) > code {\r\n\t\tpadding: 1px 6px;\r\n\t\tborder-radius: 4px;\r\n\t\tbackground: rgb(var(--text-color));\r\n\t\tcolor: rgb(var(--background-color));\r\n\t}\r\n\r\n\tcode,\r\n\tpre {\r\n\t\ttab-size: 2;\r\n\t\t// font-size: 0.875rem;\r\n\t\t// font-family: 'Fira Mono', monospace;\r\n\t}\r\n\r\n\tkbd {\r\n\t\tfont-weight: 300;\r\n\t\tfont-size: 0.875rem;\r\n\t\tpadding: 1px 6px 2px;\r\n\t\tborder-radius: 4px;\r\n\t\tborder: 1px solid rgba(var(--text-color), 60%);\r\n\t\tborder-bottom-width: 2px;\r\n\t}\r\n\r\n\timg {\r\n\t\tmax-width: 100%;\r\n\t\tborder-radius: 8px;\r\n\t}\r\n\r\n\tfigure {\r\n\t\t& figcaption {\r\n\t\t\tmargin-bottom: 1rem;\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-size: 0.875rem;\r\n\t\t\topacity: 0.8;\r\n\t\t}\r\n\t}\r\n\r\n\ttable {\r\n\t\tborder-collapse: collapse;\r\n\t}\r\n\r\n\tthead {\r\n\t\tbackground-color: rgb(var(--shade));\r\n\t}\r\n\r\n\ttr {\r\n\t\tborder-bottom: 1px solid rgb(var(--shade));\r\n\t}\r\n\r\n\tth,\r\n\ttd {\r\n\t\tpadding: 2px 8px;\r\n\t\tword-break: keep-all;\r\n\r\n\t\t&:not(:last-child) {\r\n\t\t\tborder-right: 1px solid rgb(var(--shade));\r\n\t\t}\r\n\t}\r\n\r\n\t// Markdown Responsive Design\r\n\t@media (max-width: 768px) {\r\n\t\twidth: 100%;\r\n\t\tpadding: 80px 20px;\r\n\t\tline-height: 1.6;\r\n\r\n\t\th1 {\r\n\t\t\tfont-size: 23px;\r\n\t\t}\r\n\r\n\t\th2 {\r\n\t\t\tfont-size: 20px;\r\n\t\t}\r\n\r\n\t\th3 {\r\n\t\t\tfont-size: 17px;\r\n\t\t}\r\n\r\n\t\timg {\r\n\t\t\twidth: 100%;\r\n\t\t}\r\n\r\n\t\thr {\r\n\t\t\tmargin: 3.5714rem 0;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst PostContent: FunctionComponent<PostContentProps> = function ({ html }) {\r\n\treturn (\r\n\t\t<MarkdownWrapper>\r\n\t\t\t<MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />\r\n\t\t</MarkdownWrapper>\r\n\t);\r\n};\r\n\r\nexport default PostContent;\r\n","import React, {\r\n  createRef,\r\n  FunctionComponent,\r\n  useContext,\r\n  useEffect,\r\n} from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { DarkModeContext } from 'hooks/DarkModeContext'\r\n\r\nconst src = 'https://utteranc.es/client.js'\r\nconst repo = 'callmebyneon/callmebyneon.github.io'\r\n\r\ntype UtterancesAttributesType = {\r\n  src: string\r\n  repo: string\r\n  'issue-term': string\r\n  label: string\r\n  theme: string\r\n  crossorigin: string\r\n  async: string\r\n}\r\n\r\nconst UtterancesWrapper = styled.div`\r\n  margin-top: 80px;\r\n  @media (max-width: 768px) {\r\n    padding: 0 20px;\r\n  }\r\n`\r\n\r\nconst CommentWidget: FunctionComponent = function () {\r\n  const element = createRef<HTMLDivElement>()\r\n  const { dark } = useContext(DarkModeContext)\r\n\r\n  useEffect(() => {\r\n    if (element.current === null) return\r\n    console.log(element.current)\r\n    const utterances: HTMLScriptElement = document.createElement('script')\r\n\r\n    const attributes: UtterancesAttributesType = {\r\n      src,\r\n      repo,\r\n      'issue-term': 'pathname',\r\n      label: 'Comment',\r\n      theme: dark ? 'github-dark' : 'github-light',\r\n      crossorigin: 'anonymous',\r\n      async: 'true',\r\n    }\r\n\r\n    Object.entries(attributes).forEach(([key, value]) => {\r\n      utterances.setAttribute(key, value)\r\n    })\r\n\r\n    if (element.current.childElementCount === 1) {\r\n      const child = element.current.firstChild\r\n      element.current.removeChild(child!)\r\n    }\r\n    element.current.appendChild(utterances)\r\n  }, [dark])\r\n\r\n  return <UtterancesWrapper ref={element} />\r\n}\r\n\r\nexport default CommentWidget\r\n","import React, { FunctionComponent } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { PostPageItemType } from 'types/PostItem.types'\r\nimport Template from 'components/Common/Template'\r\nimport PostHead from '../components/Post/PostHead'\r\nimport PostTOC from '../components/Post/PostTOC'\r\nimport PostContent from '../components/Post/PostContent'\r\nimport CommentWidget from 'components/Post/CommentWidget'\r\nimport styled from '@emotion/styled'\r\nimport BottomNav from 'components/Common/BottomNav'\r\n\r\ntype PostTemplateProps = {\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostPageItemType[]\r\n    }\r\n  }\r\n  location: {\r\n    href: string\r\n  }\r\n}\r\n\r\nconst ContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  margin-bottom: 80px;\r\n`\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 768px;\r\n  margin: 0;\r\n\r\n  @media (max-width: 768px) {\r\n    width: calc(100vw - 20px * 2);\r\n    max-width: 768px;\r\n  }\r\n`\r\n\r\nconst PostTemplate: FunctionComponent<PostTemplateProps> = function ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n  location: { href },\r\n}) {\r\n  const {\r\n    node: {\r\n      html,\r\n      tableOfContents,\r\n      frontmatter: { title, summary, date, category, tags, emoji },\r\n    },\r\n  } = edges[0]\r\n\r\n  return (\r\n    <Template title={title} description={summary} url={href} image={emoji}>\r\n      <ContentWrapper>\r\n        <PostTOC html={tableOfContents} />\r\n        <div>\r\n          <Content>\r\n            <PostHead\r\n              title={title}\r\n              date={date}\r\n              category={category}\r\n              tags={tags}\r\n              emoji={emoji}\r\n            />\r\n            <PostContent html={html} />\r\n          </Content>\r\n          <CommentWidget />\r\n        </div>\r\n      </ContentWrapper>\r\n      <BottomNav />\r\n    </Template>\r\n  )\r\n}\r\n\r\nexport default PostTemplate\r\n\r\nexport const queryMarkdownDataBySlug = graphql`\r\n  query queryMarkdownDataBySlug($slug: String) {\r\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\r\n      edges {\r\n        node {\r\n          html\r\n          tableOfContents(maxDepth: 3)\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY.MM.DD.\")\r\n            category\r\n            tags\r\n            emoji\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["PostHeadInfoWrapper","Date","Title","PostData","PostHeadInfo","title","date","category","tags","emoji","___EmotionJSX","className","join","PostHeadWrapper","PostHead","TocWrapper","target","TocRenderer","name","styles","PostContent","html","dangerouslySetInnerHTML","__html","MarkdownWrapper","MarkdownRenderer","UtterancesWrapper","element","createRef","dark","useContext","DarkModeContext","useEffect","current","console","log","utterances","document","createElement","attributes","src","repo","label","theme","crossorigin","async","Object","entries","forEach","key","value","setAttribute","childElementCount","child","firstChild","removeChild","appendChild","ref","ContentWrapper","Content","PostTemplate","edges","data","allMarkdownRemark","href","location","node","tableOfContents","_edges$0$node$frontma","frontmatter","summary","Template","description","url","image","PostTOC","CommentWidget","BottomNav"],"sourceRoot":""}