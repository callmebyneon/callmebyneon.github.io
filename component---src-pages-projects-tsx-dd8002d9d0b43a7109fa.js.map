{"version":3,"file":"component---src-pages-projects-tsx-dd8002d9d0b43a7109fa.js","mappings":"iMAgCA,IAAMA,GAAW,cAAAC,OAAAA,YAAA,EAAAC,KAAAA,SAAAC,OAAAA,4GAQXC,GAAS,cAAAH,OAAAA,YAAA,EAAAC,KAAAA,SAAAC,OAAAA,6BAKTE,GAAW,cAAAJ,OAAAA,YAAA,EAAAC,KAAAA,SAAAC,OAAAA,uDAMXG,GAAiBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAP,CAAAP,OAAAA,YAAAM,CAAHE,CAAAP,KAAAA,SAAAC,OAAAA,oGAgEpB,UAzC6D,SAAC,GAQxD,QAPJO,KAOI,IANFC,KACEC,aAAgBC,EAKhB,EALgBA,MAAOC,EAKvB,EALuBA,YAAaC,EAKpC,EALoCA,QAE9BC,EAGN,EAHFC,KAAQD,WAlBgB,SAACE,GAC3B,IAAMC,EAAW,CAAC,EAElBD,EAAME,SAAQ,SAAAC,GACZC,OAAOC,eAAeJ,EAAUE,EAAKnB,KAAM,CACzCsB,MAAOH,EACPI,UAAU,GAHd,GAHF,CAsBiBC,CADX,EAFFC,QAAWT,OAMb,OACEU,EAAAA,EAAAA,IAACC,EAAAA,EAAD,CACEhB,MAAOA,EACPC,YAAaA,EACbgB,IAAKf,EACLgB,MAAOf,IAEPY,EAAAA,EAAAA,IAAC5B,EAAD,MACE4B,EAAAA,EAAAA,IAACI,EAAAA,EAAD,OACAJ,EAAAA,EAAAA,IAACxB,EAAD,MAQEwB,EAAAA,EAAAA,IAAAA,MAAAA,CAAKK,IAAKjB,EAAWH,MAAM,MAAMqB,IAAI,UAEvCN,EAAAA,EAAAA,IAACvB,EAAD,uBACgBuB,EAAAA,EAAAA,IAAAA,KAAAA,MADhB,uBAIAA,EAAAA,EAAAA,IAACtB,EAAD,CAAgB6B,GAAG,KAAnB,SAnCR,C","sources":["webpack://gatsby-starter-default/./src/pages/projects.tsx"],"sourcesContent":["import React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport Template from 'components/Common/Template'\nimport { Link, graphql } from 'gatsby'\nimport GlobalStyle from 'components/Common/GlobalStyle'\nimport twemoji from 'twemoji'\n\ninterface FileInfoType {\n  base: string\n  name: string\n  ext: string\n  publicURL: string\n}\n\ninterface PortfolioPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        siteUrl: string\n      }\n    }\n    file: {\n      publicURL: string\n    }\n    allFile: {\n      nodes: FileInfoType[]\n    }\n  }\n}\n\nconst PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: calc(100vh - 100px);\n`\n\nconst HeroImage = styled.div`\n  width: 200px;\n  height: 200px;\n`\n\nconst Description = styled.div`\n  font-size: 1.5rem;\n  text-align: center;\n  line-height: 1.3;\n`\n\nconst GoToMainButton = styled(Link)`\n  margin-top: 30px;\n  font-size: 1.25rem;\n  text-decoration: underline;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nconst generateImageObject = (nodes: FileInfoType[]) => {\n  const imageObj = {}\n\n  nodes.forEach(node => {\n    Object.defineProperty(imageObj, node.name, {\n      value: node,\n      writable: false,\n    })\n  })\n\n  return imageObj\n}\n\nconst PortfolioPage: FunctionComponent<PortfolioPageProps> = ({\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    file: { publicURL },\n    allFile: { nodes },\n  },\n}) => {\n  const source = generateImageObject(nodes)\n  // console.log(source)\n\n  return (\n    <Template\n      title={title}\n      description={description}\n      url={siteUrl}\n      image={publicURL}\n    >\n      <PageWrapper>\n        <GlobalStyle />\n        <HeroImage\n        // dangerouslySetInnerHTML={{\n        //   __html: twemoji.parse('🚧', {\n        //     folder: 'svg',\n        //     ext: '.svg',\n        //   }),\n        // }}\n        >\n          <img src={publicURL} title=\"준비중\" alt=\"준비중\" />\n        </HeroImage>\n        <Description>\n          준비 중인 페이지입니다. <br />\n          다른 콘텐츠를 보러 가보시겠어요?\n        </Description>\n        <GoToMainButton to=\"/\">메인으로</GoToMainButton>\n      </PageWrapper>\n    </Template>\n  )\n}\n\nexport default PortfolioPage\n\nexport const getPageInfo = graphql`\n  query getPageInfo {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    file(name: { eq: \"1f6a7\" }) {\n      publicURL\n    }\n    allFile(filter: { absolutePath: { regex: \"/portfolio/\" }, publicURL: {} }) {\n      nodes {\n        base\n        name\n        ext\n        publicURL\n      }\n    }\n  }\n`\n"],"names":["PageWrapper","target","name","styles","HeroImage","Description","GoToMainButton","_styled","Link","process","data","site","siteMetadata","title","description","siteUrl","publicURL","file","nodes","imageObj","forEach","node","Object","defineProperty","value","writable","generateImageObject","allFile","___EmotionJSX","Template","url","image","GlobalStyle","src","alt","to"],"sourceRoot":""}